a.setEditable(false);
a.setButtonEnable(true);
var s=0;
a.setContent("欢迎你，初学者！\n首先，放下你心中一切繁重的负担，你需要认清的是：\n①Js根本没有你想象中的那么困难\n②学习Js并不会让你有装X的成本\n没错就是这样\n如果我们准备好了，那就开始吧！");
a.setButtonText("开始");
function onClick(v) {
switch (s) {
case 0:
  a.setContent("计算机生来就是为人类提供便利的\n不过计算机怎么理解人类想要让它干什么呢？\n这时我们就要用到编程语言了\n\n世界上有许多编程语言，Js(JavaScript的简称)只是其中一种\n不过幸运的是，大部分的编程语言的大体结构都是相似的，你只要学会了其中一种，再学习其它语言就很容易了\n\n这节课我们先从最基本的Js语法讲起");
  a.setButtonText("下一步");
  break;
case 1:
  a.setContent("什么是语法？\n学过英语的童鞋可能知道，语法是英语的用语规范\n那么Js的语法也就是Js的语言规范啦！\n编程语言的核心是代码，一个程序可以有很多行代码\n然而我们怎么分开这些代码呢？大部分语言都要求在每一行代码后面加一个分号(而回车可以不加)，就像下面这样\n\n注意：Js(包括几乎所有编程语言)都是使用英文符号，英文符号中的分号是\";\"，而中文符号中是\"；\"");
  a.setCode("我是一行代码;\n我是一行代码;\n我是一行代码;我是一行代码;");
  a.setButtonText("那Js呢？");
  break;
case 2:
  a.setContent("Js的要求没有那么严格，每一行代码后面不一定要加分号\n但如果不加分号，就一定要加上回车\n就像下面这样");
  a.setCode("我是一行代码;\n我是一行代码\n我是一行代码; 我是一行代码;");
  a.setButtonText("下一步");
  break;
case 3:
  a.setContent("由于一些大的程序会有N行代码，那么如果苦逼的程序员没有其他任何工具来看这些代码，绝对是会被看晕的\n还好，Js给我们提供了一个方便的特性(在Java和C++中也适用)，就是注释！\n你可以在你的代码中随意添加注释，以标识这段代码是干什么的，而程序运行时根本不会管这些注释\n\n注释分两种：\n①单行注释\n//注释内容\n②多行注释\n/*注释内容\n注释内容*/\n\n注意：多行注释中不能嵌套多行注释");
  a.setCode("/*一段代码\n创建时间：X年X月XX日\n创建人：XXX*/\n\n//下面这行代码是用来XX的\n一行代码;");
  break;
case 4:
  a.setContent("Js中还有一个概念 - 代码块！\n代码块是指很多行代码用一对大括号{}括起来，你可以把代码理解为文件，而代码块理解为文件夹！\n这个代码块有什么用呢？别急，我们在下面的课程中就会讲到\n\n注：代码块中的代码前面空两格是很好的习惯，因为这样可以显示出代码的层次感，并且会让代码更易读(体会不出来？等你写出几百行代码就明白了[滑稽])\n\n今天的课程就到这里，下课！");
  a.setCode("{\n  一行代码;\n  一行代码;\n  一行代码;\n}");
  a.setButtonText("退出");
  break;
case 5:
  a.finish();
  break;
}
s++;
}